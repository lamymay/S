安卓入门.txt


0. 初始化一个空项目
1. 创建Activity
2. 加载布局
3. 声明Activity
#######################################################################################################

要运行，需要有有一个 Activity
1、成为Activity类则需要继承Activity
2、在哪里布局？ src/main/res/layout/activity_main.xml 新建一个布局
问题：
怎么显示布局？

用setContentLayout();
setContentView(R.layout.activity_main);

用 R.layout.XXX文件名称，来关联这个布局

运行一下看看，能不能显示出来？，现在还不能运行，因为还没有程序入口


程序入口在哪里？ src/main/AndroidManifest.xml，写两句话
<activity android:name=".MainActivity">
    <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
    </intent-filter>
</activity>

这个类intent-filter将未程序声明一个入口

再次编译启动程序，好，已经能看到效果了。






4. 跳转Activity
#######################################################################################################
学习跳转 	https://www.bilibili.com/video/av45515915/?p=2

新建一个活动，并声明程序入口，程序启动在 做跳转到 MainActivity

编辑那个新建的活动


用Intent 实现跳转 ，作用： 从一个（this）活动跳转到另一个活动，第一个参数是当前类.this,第二个参数是要跳转的那个类.class




5. 跳转并携带数据 git代码在所在分支： class1
#######################################################################################################


接收int类型的数字，如果没有需要给默认值，基本数据类型注意给出默认值
接收String数据，可以接收多种
Toast 用于弹出提示



6. 跳转后返回数据，即：a跳到b，b处理完成后返回a并带上数据给a git代码在所在分支： class2
#######################################################################################################

接下来学习，返回数据，模拟选择之后返回上一个页面，如：从a跳转到b，由b向a返回一个数据

startActivityForResult(intent, 0x10);  //此行代码表示跳转后，想要拿到返回值
用这个函数来接收返回值 protected void onActivityResult(int requestCode, int resultCode, Intent data) {


十进制转二进制对照表
0 	0000
1 	0001
2 	0010
3 	0011
4 	0100
5 	0101
6 	0110
7 	0111
8 	1000
9 	1001
10 	1010



7. 安卓中基础控件 git代码在所在分支： class3
#######################################################################################################

安卓界面上的所有元素，都是通过一个个控件堆叠起来的，所以学习基础控件，很有必要

问题：
控件写在什么地方？
前面课程中写的XXX.xml, 可以吧这些xml看作成一种解析语言，当程序运行时，程序会把.xml的定义解析成界面，所以可以在xml中编写界面代码

注意：控件都是成对出现的标签

例如：
<LinearLayout></LinearLayout>

每个控件都会有两个属性
android:layout_width="wrap_content" 用于标识控件宽度
android:layout_height="wrap_content" 用于标识控件高度
注，值可选：
wrap_content    内容有多大就显示多大
match_parent    父控件多大就显示多大
xxdp                   写绝对值，


第一个： TextView
android:text                用于设置值
android:textColor       用于设置文本颜色
android:textSize         用于设置文本字体大小 xxsp


第二个：Button 继承自 TextView ， 所以TextView的属性 Button也有
Button 默认带了一个背景，我们主要用Button来响应点击事件
android:id                用于设置值



附：

TextView
ImageView
EditText
EditText
ProgressBar
Button





